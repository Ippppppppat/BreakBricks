// 32 - Space
// 140 - Esc
class BreakBricksGame {
	field Ball ball;
	field Paddle paddle;
	field Bricks bricks;
	field Counter counter;
	field int rowsCount, bricksInRowCount;
	field int speed;

	constructor BreakBricksGame new() {
		do startOfTheGame();
		let ball = Ball.new(40, 70, speed, speed);
		let paddle = Paddle.new(70, 235);
		let bricksInRowCount = 17;
		let counter = Counter.new();
		let bricks = Bricks.new(rowsCount, bricksInRowCount);

		do TextWriter.writeInfoAboutGame();
	
		let bricks = bricks.getBricks();
		return this;
  	}

	method void startOfTheGame() {
		do Output.moveCursor(0, 0);
		let speed = Keyboard.readInt("Enter ball speed: ");
		let rowsCount = Keyboard.readInt("Enter the number of rows: ");
		do Screen.clearScreen();
		return;
	}


	// Освобождение памяти
	method void dispose() {
		 do ball.dispose();
		 do paddle.dispose();
		 do counter.dispose();
		 do bricks.dispose();
		 do Memory.deAlloc(this);
		 return;
	}

	// ждём, когда игрок нажмёт Space и начинаем игру заново
	method void waitRestart() {
		while (true) {
				if (Keyboard.keyPressed() = 32) {
					do Screen.clearScreen();
					do Main.main();
				}
			}
		return;
	}

	// Пока не нажали escape, постоянно запускаем все методы проверок и движения
	method void run() {
		var char key;
		var boolean exit;
		let exit = false;
		while (~exit) {
			if (Keyboard.keyPressed() = 140)  { let exit = true; }
			do counter.draw();
			do ball.move();
			do paddle.move();
			do checkAllConditions();
		}
		if (exit) {
			do dispose();
			do TextWriter.writeExitText();
			do waitRestart();
	    }
		return;
	}

	// проверяем столкновение мяча с платформой/кирпичиками и не конец ли игры
	method void checkAllConditions() {
		var int posY, posX;
		var int speedX, speedY;

		let posX = ball.getX();
		let posY = ball.getY();
		let speedX = ball.getSpeedX();
		let speedY = ball.getSpeedY();

		do checkPaddleCollision(posX, posY, speedY);
		do checkBrickCollision(posX, posY, speedX, speedY);
		do checkGameOver(ball);
		do checkWinning(counter);
		do Sys.wait(10);
		return;
	}

	// Проверка столкновения мяча с платформой
	method void checkPaddleCollision(int posX, int posY, int speedY) {
		var int paddleX, paddleY;
		
		let paddleX = paddle.getX();
		let paddleY = paddle.getY();

		if ((posY > (paddleY - 2)) & (posY < (paddleY + 2)) & (posX > (paddleX - 2)) & (posX < (paddleX + 25))) {
			let speedY = -speedY;
			do ball.setSpeedY(speedY);
		}				
		return;
	}

	// Проверка столкновения мяча с блоком
	 method void checkBrickCollision(int posX, int posY, int speedX, int speedY) {
        var int i, j;
        var Brick brick;
        var int brickX, brickY;
		var int nextPosX, nextPosY;

		let j = 0;
		while (j < rowsCount) {
			let i = 0;
			while (i < bricksInRowCount) {
				let brick = bricks[i + (j * bricksInRowCount)];

				if (~(brick = null)) {
					let brickX = brick.getX();
					let brickY = brick.getY();

					let nextPosX = posX + speedX;
                	let nextPosY = posY + speedY;
						
					if (((nextPosY + 2) > brickY) & (nextPosY < (brickY + 2)) &
                    ((nextPosX + 2) > brickX) & (nextPosX < (brickX + 25))) {
						let speedY = -speedY;
						do ball.setSpeedY(speedY);
						do brick.erase();
						do brick.dispose();
						do counter.add();
						let bricks[i + (j * bricksInRowCount)] = null;
					}
				}
				let i = i + 1;
			}
			let j = j + 1;
		}
        return;
    }

	// Проверка на то, что игрок проиграл
	method void checkGameOver(Ball ball) {
		var int ballY;
		let ballY = ball.getY();
		if (ballY > 249) {
			do dispose();
			do TextWriter.writeGameOver();
			do waitRestart();
		}
		return;
	}

	// проверяем, не победили ли мы
	method void checkWinning(Counter counter) {
		var int bricksCount;
		let bricksCount = rowsCount * bricksInRowCount;
		if(counter.getCount() = bricksCount) {
			do dispose();
			do TextWriter.writeVictory();
			do waitRestart();

		}
		return;
	}

	
}