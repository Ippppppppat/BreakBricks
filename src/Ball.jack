class Ball {
	field int posX, posY, speedX, speedY;

	constructor Ball new(int startX, int startY, int velocityX, int velocityY) {
		let posX = startX;
        let posY = startY;
        let speedX = velocityX;
        let speedY = velocityY;
		do draw();
		return this;
	}

	// Освобожднеие памяти
	method void dispose() {
		 do Memory.deAlloc(this);
		 return;
	}
	
	// Стираем мяч
	method void erase() {
      do Screen.setColor(false);
      do Screen.drawCircle(posX, posY, 3);
      return;
   }

	// Рисуем мяч
	method void draw() {
		 do Screen.setColor(true);
		 do Screen.drawCircle(posX, posY, 3);
		 return;
	}

	// Движение мяча
	method void move() {
		do erase();

		if ((posX < 5) | (posX > 506)) { let speedX = -speedX; }
        if (posY < 5) { let speedY = -speedY; }

		let posX = posX + speedX;
        let posY = posY + speedY;

		do draw();

		return;
	}

	// Проверка столкновения мяча с платформой
	method void checkPaddleCollision(Paddle p) {
		var int paddleX, paddleY;
		var int i;
		var Brick brick;
		var int brickX, brickY;

		let paddleX = p.getX();
		let paddleY = p.getY();

		if ((posY > (paddleY - 2)) & (posY < (paddleY + 2)) & (posX > (paddleX - 2)) & (posX < (paddleX + 25))) {
			let speedY = -speedY;
		}		

		// TODO: Как-то сделать проверку, что мячик коснулся блока, сделать отскок мяча + удалить блок (понятия не имею, как сделать)   
		
		return;
	}


	// хуйня ебаная, которая не работает, почините пж, я его того ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ ಥ_ಥ
	 method void checkBrickCollision(Array bricks, int bricksCount, Counter counter) {
        var int i;
        var Brick brick;
        var int brickX, brickY;
		var Counter counter;

		let counter = Counter.new();

        let i = 0;
        while (i < bricksCount) {
            let brick = bricks[i];
            let brickX = brick.getX();
            let brickY = brick.getY();


            if ((posY > (brickY - 2)) & (posY < (brickY + 2)) & (posX > (brickX - 2)) & (posX < (brickX + 25))) {
                let speedY = -speedY;
                do brick.erase();
                do counter.add();
            }

            let i = i + 1;
        }

        return;
    }

	method int getX() { return posX; }
    method int getY() { return posY; }
}
