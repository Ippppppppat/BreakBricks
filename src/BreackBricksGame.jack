class BreackBricksGame {
	field Ball ball;
	field Paddle paddle;
	field Bricks bricks;
	field Counter counter;
	field int rowsCount, bricksInRowCount;

	field int KEY_SPACE;
	field int KEY_ESC;

	constructor BreackBricksGame new() {
		let ball = Ball.new(40, 70, 2, 2);
		let paddle = Paddle.new(70, 235);
		let rowsCount = 2;
		let bricksInRowCount = 17;
		let counter = Counter.new();
		let bricks = Bricks.new(rowsCount, bricksInRowCount);

		let KEY_SPACE = 32;
		let KEY_ESC = 140;

		// вынести в метод бубубу
		do Output.moveCursor(22,0);
		do Output.printString("Score: 0");

		do Output.moveCursor(22,30);
		do Output.printString("Use -> and <- to move platform");

		let bricks = bricks.getBricks();
		return this;
  }


	// Освобождение памяти
	method void dispose() {
		 do ball.dispose();
		 do paddle.dispose();
		 do counter.dispose();
		 do bricks.dispose();
		 do Memory.deAlloc(this);
		 return;
	}

	// ждём, когда игрок нажмёт Space и начинаем игру заново
	method void waitRestart() {
		while (true) {
				if (Keyboard.keyPressed() = 32) {
					do Screen.clearScreen();
					do Main.main();
				}
			}
		return;
	}

	// Пока не нажали escape, постоянно запускаем все методы проверок и движения
	method void run() {
		var char key;
		var boolean exit;
		let exit = false;

		while (~exit) {
			let key = Keyboard.keyPressed();
			if (key = 140)  { let exit = true; }
			do counter.draw();
			do ball.move();
			do paddle.move();
			do checkAllConditions();
		}
		if (exit) {
			do dispose();
			do Screen.clearScreen();
            do Output.moveCursor(10,27);
	        do Output.printString("well go away :(");
	    }
		return;
	}

	// проверяем столкновение мяча с платформой/кирпичиками и не конец ли игры
	method void checkAllConditions() {
		
		do ball.checkPaddleCollision(paddle);
		do ball.checkBrickCollision(bricks, rowsCount, bricksInRowCount, counter);
		do checkGameOver(ball);
		do checkWinning(counter);
		do Sys.wait(10);
		return;

	}

	// Проверка на то, что игрок проиграл
	method void checkGameOver(Ball ball) {
		var int ballY;
		let ballY = ball.getY();
		if ((ballY > 250)) {
			do dispose();
			do writeGameOver();
			do waitRestart();
		}
		return;
	}

    // говорим, что игрок проиграл
	method void writeGameOver() {
		do Screen.clearScreen();
		do Output.moveCursor(11,15);
	    do Output.printString("LOOSER");
		do Output.moveCursor(12,15);
		do Output.printString("Stop embarrassing yourself and go train");
		do Output.moveCursor(15,15);
		do Output.printString("(Press Space to start again)");
		return;
	}

	// проверяем, не победили ли мы
	method void checkWinning(Counter counter) {
		var int bricksCount;
		let bricksCount = rowsCount * bricksInRowCount;
		if(counter.getCount() = bricksCount) {
			do writeVictory();
			do waitRestart();
		}
		return;
	}

	// поздравляем с победой
	method void writeVictory() {
		do dispose();
		do Screen.clearScreen();
		do Output.moveCursor(11,15);
	    do Output.printString("CONGRATULATIONS!");
		do Output.moveCursor(12,15);
		do Output.printString("You won");
		do Output.moveCursor(15,15);
		do Output.printString("(Press Space to start again)");
		return;
	}
}